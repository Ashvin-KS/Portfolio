'use client'

import { useState, useEffect } from 'react'
import { useTheme } from 'next-themes'
import { useToast } from '@/hooks/use-toast'
import { useTypingAnimation } from '@/hooks/use-typing-animation'
import { Navigation } from '@/components/portfolio/Navigation'
import { Hero } from '@/components/portfolio/Hero'
import { About } from '@/components/portfolio/About'
import { Projects } from '@/components/portfolio/Projects'
import { Career, CareerTimeline } from '@/components/portfolio/Career'
import { Skills } from '@/components/portfolio/Skills'
import { Creative } from '@/components/portfolio/Creative'
import { Contact } from '@/components/portfolio/Contact'
import { Footer } from '@/components/portfolio/Footer'
import Waves from '@/components/Waves'
// import Galaxy from '@/components/Galaxy'


import {
  Code,
  Database,
  Server,
  Globe,
  Briefcase,
  Award,
  Building,
  GraduationCap,
  Github
} from 'lucide-react'

export default function Portfolio() {
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [mounted, setMounted] = useState(false)
  const { theme, setTheme } = useTheme()
  const { toast } = useToast()
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  })
  const [isSubmitting, setIsSubmitting] = useState(false)
  
  const titles = [
    "Full-Stack Developer",
    "UI/UX Enthusiast", 
    "Game Dev",
    "Blenderian"
  ]
  const animatedTitle = useTypingAnimation(titles, 100, 2000)

  useEffect(() => {
    setMounted(true)
  }, [])

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId)
    element?.scrollIntoView({ behavior: 'smooth' })
    setIsMenuOpen(false)
  }

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setFormData(prev => ({ ...prev, [name]: value }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)

    try {
      const response = await fetch('/api/contact', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      })

      const data = await response.json()

      if (response.ok) {
        toast({
          title: "Success!",
          description: data.message,
        })
        setFormData({ name: '', email: '', message: '' })
      } else {
        toast({
          title: "Error",
          description: data.error,
          variant: "destructive",
        })
      }
    } catch (error) {
      toast({
        title: "Error",
        description: "Failed to send message. Please try again.",
        variant: "destructive",
      })
    } finally {
      setIsSubmitting(false)
    }
  }

  const projects = [
    {
      title: "Chef Gemini: AI Recipe Generator",
      description: "A React application built with Vite, designed to act as an AI-powered recipe generator. Users input ingredients and receive a recommended recipe generated by the Google Generative AI model.",
      tech: ["React", "Vite", "Google Generative AI", "dotenv", "react-markdown"],
      github: "https://github.com/Ashvin-KS/recipe-maker",
      demo: "https://github.com/Ashvin-KS/recipe-maker",
      image: "/images/chefgemini.png"
    },
    {
      title: "Music Streaming Web App",
      description: "A music streaming web application with a React frontend and a Flask backend. It uses YouTube as a source for audio content, allowing users to search for music, manage playlists, and stream audio directly in the browser.",
      tech: ["React", "Flask", "YouTube API", "yt-dlp"],
      github: "https://github.com/Ashvin-KS/Musicplayer",
      demo: "https://github.com/Ashvin-KS/Musicplayer",
      image: "/images/music_app.png"
    },
    {
      title: "Amorvin-Chess-AI",
      description: "A Chess AI built with PyTorch, featuring both Supervised Learning and Reinforcement Learning (Self-Play). Train, play, and improve the AI with Monte Carlo Tree Search (MCTS) and a deep neural network.",
      tech: ["Python", "PyTorch", "Monte Carlo Tree Search", "numpy"],
      github: "https://github.com/Ashvin-KS/Amorvin-Chess-AI",
      demo: "https://github.com/Ashvin-KS/Amorvin-Chess-AI",
      image: "/images/chess.gif"
    },
    {
      title: "Workout App",
      description: "A simple web application to help users track and manage their workouts. It provides a user-friendly interface to view different workout routines, track progress, and manage personal fitness goals.",
      tech: ["React", "Vite", "Lucide React", "Tailwind CSS", "Local Storage"],
      github: "https://github.com/Ashvin-KS/calisthenics-app",
      demo: "https://github.com/Ashvin-KS/calisthenics-app",
      image: "/images/calisthenics.png"
    }
  ]

  const skills = [
    { category: "Frontend", items: ["React", "Next.js", "TypeScript", "Tailwind CSS", "Vue.js"], icon: <Code className="w-5 h-5" /> },
    { category: "Backend", items: ["Node.js", "Python", "Express", "FastAPI", "GraphQL"], icon: <Server className="w-5 h-5" /> },
    { category: "Database", items: ["PostgreSQL", "MongoDB", "Redis", "Prisma", "MySQL"], icon: <Database className="w-5 h-5" /> },
    { category: "Tools", items: ["Git", "Docker", "AWS", "CI/CD", "Agile"], icon: <Globe className="w-5 h-5" /> }
  ]

  const blenderProjects = [
    {
      title: "Sci-Fi Environment",
      description: "A detailed sci-fi laboratory environment created with Blender, featuring advanced lighting and texturing techniques.",
      software: ["Blender", "Substance Painter", "Photoshop"],
      image: "/api/placeholder/400/300",
      type: "environment",
      featured: true,
      gallery: [
        "/api/placeholder/400/300",
        "/api/placeholder/400/300",
        "/api/placeholder/400/300"
      ]
    },
    {
      title: "Character Sculpt - Zephyr",
      description: "Original character sculpt with detailed clothing and accessories, showcasing advanced sculpting techniques.",
      software: ["Blender", "ZBrush", "Substance Painter"],
      image: "/api/placeholder/400/300",
      type: "character",
      featured: true,
      gallery: [
        "/api/placeholder/400/300",
        "/api/placeholder/400/300"
      ]
    },
    {
      title: "Product Visualization",
      description: "Photorealistic product renders for a client's marketing campaign, focusing on material accuracy and lighting.",
      software: ["Blender", "Photoshop", "Lightroom"],
      image: "/api/placeholder/400/300",
      type: "product",
      featured: false,
      gallery: [
        "/api/placeholder/400/300",
        "/api/placeholder/400/300",
        "/api/placeholder/400/300",
        "/api/placeholder/400/300"
      ]
    },
    {
      title: "Architectural Visualization",
      description: "Modern architectural visualization of a residential building complex with interior and exterior renders.",
      software: ["Blender", "SketchUp", "V-Ray"],
      image: "/api/placeholder/400/300",
      type: "architecture",
      featured: false,
      gallery: [
        "/api/placeholder/400/300",
        "/api/placeholder/400/300"
      ]
    }
  ]

  const gameDevProjects = [
    {
      title: "Unreal Engine Landscape",
      description: "A landscape visualization project created with Unreal Engine 5.",
      engine: "UE5",
      genre: "landscape Visualization",
      platform: "PC, Mobile",
      role: "Solo Designer",
      image: "/images/unrealenginelandscape.jpg",
      featured: true,
      technologies: ["Unreal Engine", "Blueprints", "C++", "Procedural Generation"],
      demoUrl: "https://github.com/Ashvin-KS/",
      githubUrl: "https://github.com/Ashvin-KS/",
      achievements: [],
      status: "In Development",
      platforms: ["PC", "Mobile"],
      features: ["Procedural Generation", "Dynamic Lighting", "Real-time Rendering"],
      developmentTime: "Ongoing"
    },
    
  ]

  const careerTimeline: CareerTimeline = {
  "2022": [
    {
      title: "Exploring HTML, CSS, and JavaScript",
      company: "SSM School",
      location: "Chennai, India",
      date: "August 2022",
      type: "learning",
      description: "My baby steps to web development.",
      achievements: [
        "coded simple youtube iframe embed page",
        "Learnt basics of web dev like js, html, css",
        "Created my first personal webpage"
      ],
      icon: <Award className="w-5 h-5" />,
      color: "bg-yellow-500"
    },
    {
      title: "Python journery begins",
      company: "SSM School",
      location: "Chennai, India",
      date: "September 2022 - May 2024",
      type: "learning",
      description: "did projects with my sql and python ,tkinter and cerated bus booking app and water sort .",
      achievements: [
        "mastered basics of python",
        "Created GUI applications using Tkinter",
        "Implemented database operations with SQLite",
      ],
      icon: <GraduationCap className="w-5 h-5" />,
      color: "bg-orange-500"
    }
  ],
  "2024": [
    {
      title: "Joined A University ",
      company: "Vellore Institute of Technology",
      location: "Chennai, India",
      date: "August 2024 - August 2028",
      type: "education",
      description: "Pursuing Bachelor of Technology in Computer Science and Engineering.",
      achievements: [
        "Maintained 9.41 GPA",
        "Completed 5  projects",
        "explored various domains like web dev, machine learning and game dev"
      ],
      icon: <Globe className="w-5 h-5" />,
      color: "bg-green-500"
    },
    
  ],
  "2023": [
    {
      title: "My journey with Gamdev begins",
      company: "Unreal Engine and Blender",
      location: "Chennai, India",
      date: "July 2023 ",
      type: "hobby",
      description: "Exploring game development using Unreal Engine and Blender.",
      achievements: [
        "Created a 3D game prototype",
        "Learned basic 3D modeling and animation",
        "Participated in online game jams"
      ],
      icon: <Briefcase className="w-5 h-5" />,
      color: "bg-blue-500"
    },
    {
      title: "Explored Photoshop and DaVinci Resolve for YouTube channel",
      company: "Content Creation",
      location: "Chennai, India",
      date: "December 2023",
      type: "hobby",
      description: "Started a YouTube channel and learned video editing and graphic design.",
      achievements: [
        "Learnt color grading techniques and video stabilization",
        "Tried Firefly AI in Photoshop for fun edits",
        "Mostly into frame interpolation for movies 😂"
      ],
      icon: <GraduationCap className="w-5 h-5" />,
      color: "bg-orange-500"
    }
  ],
  "2025": [
    {
      title: "Full-Stack Developer",
      company: "Microsoft Innovation Club VIT",
      location: "Chennai, India",
      date: "October,10,2025 - Present",
      type: "work",
      description: "Did a hack-a-throne promotional website ",
      achievements: [
        "Developed and launched promotional website for Hack-a-throne event",
        "Suggested ideas for new apps to be built",
        "Collaborated with UX team on design system"
      ],
      icon: <Code className="w-5 h-5" />,
      color: "bg-purple-500"
    },
    {
      title: "Frontend Developer",
      company: "Code chef Student Chapter VIT",
      location: "Chennai, India",
      date: "October,22,2025 - Present",
      type: "work",
      description: "Worst club in my mind for now , but still doin weekly coding challenges",
      achievements: [
        "Participated in weekly coding challenges",
      ],
      icon: <Award className="w-5 h-5" />,
      color: "bg-yellow-500"
    }
  ],
}

  return (
    <div className="min-h-screen bg-background text-foreground">
      { <Waves
        lineColor="#1c6872ff"
        backgroundColor="rgba(0, 0, 0, 0.2)"
        waveSpeedX={0.02}
        waveSpeedY={0.01}
        waveAmpX={40}
        waveAmpY={20}
        friction={0.}
        tension={0.01}
        maxCursorMove={20}
        xGap={12}
        yGap={36}
      /> }
      <div className="absolute top-0 left-0 w-full h-full">
        {/*<Galaxy
        saturation={1}/>*/}
      
      </div>
      <Navigation
        isMenuOpen={isMenuOpen}
        setIsMenuOpen={setIsMenuOpen}
        mounted={mounted}
        theme={theme}
        setTheme={setTheme}
        scrollToSection={scrollToSection}
      />
      <Hero animatedTitle={animatedTitle} scrollToSection={scrollToSection} />
      <About />
      <Projects projects={projects} />
      <Career careerTimeline={careerTimeline} />
      <Skills skills={skills} />
      <Creative blenderProjects={blenderProjects} gameDevProjects={gameDevProjects} />
      <Contact 
        formData={formData}
        handleInputChange={handleInputChange}
        handleSubmit={handleSubmit}
        isSubmitting={isSubmitting}
      />
      <Footer />
    </div>
  )
}
